<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	default-autowire="byType"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    
    <!-- TODO review all the bean names in this file.  -->
      
   	<bean id="remote.hub.listener" class="com.concurrentperformance.pebble.comms.rpc.server.socketlistener.RpcServerConnectionFactory"
    		init-method="start"
        p:weAreA="Controller"
        p:weAreListeningFor="Hubs"
        p:port="${comms.controller-hub.port}">
    	<property name="duplexPrototypeServices">
    		<set>
    			<ref bean="hub.service.spawnedComponentControlService"/>
    		</set>
    	</property>
  	</bean>
    

    <bean id="hub.service.spawnedComponentControlService" class="com.concurrentperformance.pebble.comms.rpc.server.service.RpcServerDuplexServiceDefinition"
        p:serviceIncommingC2SAPI="com.concurrentperformance.pebble.controllerspawned.api.SpawnedComponentControlServiceC2SApi"
        p:serviceOutgoingS2CAPI="com.concurrentperformance.pebble.controllerspawned.api.SpawnedComponentControlServiceS2CApi">
        <lookup-method name="createC2SService" bean="hub.service.spawnedComponentControlService.prototype"/> 
   	</bean>
	<bean id="hub.service.spawnedComponentControlService.prototype" class="com.concurrentperformance.pebble.controller.spawned.DefaultSpawnedComponentControlService" scope="prototype"/>
   
</beans>