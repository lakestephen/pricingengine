<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       default-autowire="byType"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
    
    <!-- TODO review all the bean names in this file.  -->

    <bean id="remote.client.pipeline.listener" class="com.concurrentperformance.pebble.comms.pipeline.server.socketlistener.PipelineServerConnectionFactory"
          p:weAreA="Controller"
          p:weAreAId="0"
          p:weAreListeningFor="Client"
          p:port="5432"
          p:translator-ref="remote.translator"
          p:reciever-ref="service.client.eventBuffer" />

    <bean id="remote.translator" class="com.concurrentperformance.pebble.msgcommon.event.EventTranslator"/>
    <bean id="service.client.eventBuffer" class="com.concurrentperformance.pebble.controller.client.ClientEventBufferService"/>


    <bean name="remote.client.listener" class="com.concurrentperformance.pebble.comms.rpc.server.socketlistener.RpcServerConnectionFactory"
    		init-method="start"
        p:weAreA="Controller"
        p:weAreListeningFor="Clients"
        p:port="${comms.controller-client.port}">
        <property name="duplexPrototypeServices">
    		<set>
    			<ref bean="client.service.topologyService"/>
    			<ref bean="client.service.graphService"/>
    		</set>
    	</property>        
    </bean>
    

    <bean id="client.service.topologyService" class="com.concurrentperformance.pebble.comms.rpc.server.service.RpcServerDuplexServiceDefinition" >
        <lookup-method name="createC2SService" bean="client.service.topologyService.prototype"/> 
        <property name="serviceIncommingC2SAPI" value="com.concurrentperformance.pebble.controllerclient.api.topology.ClientTopologyServiceC2SApi"/>
        <property name="serviceOutgoingS2CAPI" value="com.concurrentperformance.pebble.controllerclient.api.topology.ClientTopologyServiceS2CApi"/>
   	</bean>
	<bean id="client.service.topologyService.prototype" class="com.concurrentperformance.pebble.controller.client.DefaultClientTopologyService" scope="prototype"/>
   
   <!-- TODO does the graph service need one per client? (I guess the listener does) -->
    <bean id="client.service.graphService" class="com.concurrentperformance.pebble.comms.rpc.server.service.RpcServerDuplexServiceDefinition" >
        <lookup-method name="createC2SService" bean="client.service.graphService.prototype"/> 
        <property name="serviceIncommingC2SAPI" value="com.concurrentperformance.pebble.controllerclient.api.graph.ClientGraphServiceC2SApi"/>
        <property name="serviceOutgoingS2CAPI" value="com.concurrentperformance.pebble.controllerclient.api.graph.ClientGraphServiceS2CApi"/>
   	</bean>
	<bean id="client.service.graphService.prototype" class="com.concurrentperformance.pebble.controller.client.DefaultClientGraphService" scope="prototype"/>

</beans>