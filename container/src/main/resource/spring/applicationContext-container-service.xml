<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       default-autowire="byType"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id="service.process"
          class="com.concurrentperformance.pebble.container.functional.receive.service.EventProcessingService"
          init-method="start">
        <property name="handlers">
            <array>
                <ref bean="handler.distributeToConsumers"/>
                <ref bean="handler.calculateDirtyItems"/>
            </array>
        </property>
    </bean>

    <bean id="handler.distributeToConsumers"
          class="com.concurrentperformance.pebble.container.functional.receive.service.DistributeToConsumersHandler"/>
    <bean id="handler.calculateDirtyItems"
          class="com.concurrentperformance.pebble.container.functional.receive.service.CalculateDirtyItemsHandler"/>

    <bean id="service.outputprocessor"
          class="com.concurrentperformance.pebble.container.functional.output.impl.DefaultOutputEventProcessor"/>

    <bean id="service.containeritems"
          class="com.concurrentperformance.pebble.container.functional.items.service.impl.DefaultContainerItemsService"
          p:containerId="${pebble.container.id}"/>

    <bean id="service.graph"
          class="com.concurrentperformance.pebble.container.functional.graph.service.impl.GraphService"/>

    <bean id="dao.graph"
          class="com.concurrentperformance.pebble.container.functional.graph.dao.impl.HibernateGraphDao"/>

</beans>